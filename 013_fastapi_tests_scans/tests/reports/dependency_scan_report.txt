+==============================================================================+
|                                                                              |
|                               /$$$$$$            /$$                         |
|                              /$$__  $$          | $$                         |
|           /$$$$$$$  /$$$$$$ | $$  \__//$$$$$$  /$$$$$$   /$$   /$$           |
|          /$$_____/ |____  $$| $$$$   /$$__  $$|_  $$_/  | $$  | $$           |
|         |  $$$$$$   /$$$$$$$| $$_/  | $$$$$$$$  | $$    | $$  | $$           |
|          \____  $$ /$$__  $$| $$    | $$_____/  | $$ /$$| $$  | $$           |
|          /$$$$$$$/|  $$$$$$$| $$    |  $$$$$$$  |  $$$$/|  $$$$$$$           |
|         |_______/  \_______/|__/     \_______/   \___/   \____  $$           |
|                                                          /$$  | $$           |
|                                                         |  $$$$$$/           |
|  by pyup.io                                              \______/            |
|                                                                              |
+==============================================================================+
| REPORT                                                                       |
| checked 5 packages, using free DB (updated once a month)                     |
+============================+===========+==========================+==========+
| package                    | installed | affected                 | ID       |
+============================+===========+==========================+==========+
| uvicorn                    | 0.0.4     | <0.11.7                  | 38664    |
+==============================================================================+
| The request logger provided by Uvicorn prior to version 0.11.7 is vulnerable |
| to ASNI escape sequence injection. Whenever any HTTP request is received,    |
| the default behaviour of uvicorn is to log its details to either the console |
| or a log file. When attackers request crafted URLs with percent-encoded      |
| escape sequences, the logging component will log the URL after it's been     |
| processed with urllib.parse.unquote, therefore converting any percent-       |
| encoded characters into their single-character equivalent, which can have    |
| special meaning in terminal emulators. By requesting URLs with crafted       |
| paths, attackers can: * Pollute uvicorn's access logs, therefore             |
| jeopardising the integrity of such files. * Use ANSI sequence codes to       |
| attempt to interact with the terminal emulator that's displaying the logs    |
| (either in real time or from a file). See: CVE-2020-7694.                    |
+==============================================================================+
| uvicorn                    | 0.0.4     | <0.11.7                  | 38665    |
+==============================================================================+
| Uvicorn before 0.11.7 is vulnerable to HTTP response splitting. CRLF         |
| sequences are not escaped in the value of HTTP headers. Attackers can        |
| exploit this to add arbitrary headers to HTTP responses, or even return an   |
| arbitrary response body, whenever crafted input is used to construct HTTP    |
| headers. See: CVE-2020-7695.                                                 |
+==============================================================================+